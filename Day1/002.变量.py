# coding=utf-8

"""
变量存储在内存中，这就意味着在创建变量时会在内存中开辟一个空间；
基于变量的数据类型，解释器会分配指定内存，并决定什么数据可以被存储在内存中。
变量赋值（不需要类型声明）：
    1。变量在内存中创建，包含变量的标识，名称和数据这些信息；
    2. 变量在使用前必须赋值，赋值以后该变量才会被创建；
"""
name = "zpq"  # 字符串
a, b, c = 1, 2, "john"  # 按照熟悉分配变量
print name

"""
python 有五个标准的数据类型
    Numbers(数字)，String(字符串)，List(列表)，Tuple(元组)，Dictionary(字典)；
    元组是另一个数据类型，类似于 List（列表）。
    元组用 () 标识。内部元素用逗号隔开。但是元组不能二次赋值，相当于只读列表。
        tuple = ( 'runoff', 786 , 2.23, 'john', 70.2 )
    列表是有序的对象集合；类似js的数组；
    字典是无序的对象集合； indict = {'name': 'runoob','code':6734, 'dept': 'sales'}
    两者之间的区别在于：字典当中的元素是通过键来存取的，而不是通过偏移存取。
    字典用"{ }"标识。字典由索引(key)和它对应的值value组成。
"""

# python 逻辑运算符: and（布尔"与"）、 or（布尔"或"）、 not（布尔"非"）

# Python成员运算符： in（在指定序列中找到返回True）,not in（如果在指定的序列中没有找到值返回 True）

# Python身份运算符：is（is 是判断两个标识符是不是引用自一个对象）， is not (is not 是判断两个标识符是不是引用自不同对象)
"""
is 与 == 区别：
is 用于判断两个变量引用对象是否为同一个(同一块内存空间)， == 用于判断引用变量的值是否相等。
"""
a = [1, 2, 3]
b = a[:]
print   b is a, b == a
